{"version":3,"sources":["webpack:///./src/views/chooseWord/assets/js/util/oao.timer.js"],"names":["$","fn","oaoTime","obj","this","each","dateStr","endtime","attr","endDate","Date","replace","undefined","now","getDate","tms","timers","push","content","callback","Fun","start","status","takeCount","setTimeout","i","j","length","days","Math","floor","hours","minutes","seconds","html","toString","split","console","log","splice","stop"],"mappings":"qDAGAA,EAAE,WAEEA,EAAEC,GAAGC,QAAS,SAAUC,GACjBC,KAAKC,KAAK,WACL,IAAIC,EAAUH,EAAII,SAASP,EAAEI,MAAMI,KAAK,aACpCC,EAAU,IAAIC,KAAKJ,EAAQK,QAAQ,KAAM,WAE9BC,GAAXT,EAAIU,MACJV,EAAIU,KAAM,IAAIH,MAAOI,WAEzB,IAAIC,EAAON,EAAS,IAAIC,KAAKP,EAAIU,KAAM,IACnCE,EAAM,GAIVf,EAAEE,QAAQc,OAAOC,MAAMF,IAAKA,EAAKG,QAASlB,EAAEI,MAAMe,SAAShB,EAAIiB,QAEvEpB,EAAEE,QAAQmB,SAIdrB,EAAEE,SAEEc,UAEAM,OAAQ,OAERC,UAAW,WAEP,GAAmB,SAAfnB,KAAKkB,OAAT,CACAE,WAAW,wBAAyB,KAEpC,IADA,IAAIR,EAASZ,KAAKY,OACTS,EAAI,EAAGC,EAAIV,EAAOW,OAAQF,EAAIC,EAAGD,IAAK,CAE3CT,EAAOS,GAAGV,KAAO,IAIjB,IAAIa,EAAOC,KAAKC,MAAMd,EAAOS,GAAGV,IAAV,OAClBgB,EAAQF,KAAKC,MAAMd,EAAOS,GAAGV,IAAV,MAAoC,GACvDiB,EAAUH,KAAKC,MAAMd,EAAOS,GAAGV,IAAV,KAA+B,GACpDkB,EAAUJ,KAAKC,MAAMd,EAAOS,GAAGV,IAAM,KAAQ,GAE7Ca,EAAO,IAAEA,EAAO,GAChBG,EAAQ,IAAEA,EAAQ,GAClBC,EAAU,IAAEA,EAAU,GACtBC,EAAU,IAAGA,EAAU,GACxBF,EAAM,KAELA,EAAM,IAAIA,GAEXC,EAAQ,KAEPA,EAAQ,IAAIA,GAEbC,EAAQ,KAEPA,EAAQ,IAAIA,GAIhBjC,EAAE,eAAekC,KAAKF,EAAQG,WAAWC,MAAM,IAAI,IACnDpC,EAAE,eAAekC,KAAKF,EAAQG,WAAWC,MAAM,IAAI,IACnDpC,EAAE,eAAekC,KAAKD,EAAQE,WAAWC,MAAM,IAAI,IACnDpC,EAAE,eAAekC,KAAKD,EAAQE,WAAWC,MAAM,IAAI,IAOzC,MAAPL,GAAsB,MAATC,GAAwB,MAATC,IAE3BI,QAAQC,IAAI,iDAAiDL,EAAQ,gBACrC,mBAAtBjB,EAAOS,GAAGN,WAChBH,EAAOS,GAAGN,SAASH,EAAOS,GAAGP,SAC7Bd,KAAKY,OAAOuB,OAAOd,EAAE,QAOrCJ,MAAO,WACgB,QAAfjB,KAAKkB,SACLlB,KAAKkB,OAAS,QACdlB,KAAKmB,cAIbiB,KAAM,WACFpC,KAAKkB,OAAS","file":"static/js/oao.timer.46736f7703a6ac8bb1cf.js","sourcesContent":["/**\r\n * Created by Lenovo on 2017/9/15.\r\n */\r\n$(function() {\r\n\r\n    $.fn.oaoTime= function (obj) {\r\n           this.each(function () {\r\n                var dateStr = obj.endtime||$(this).attr(\"data-time\");\r\n                var endDate = new Date(dateStr.replace(/-/g, \"/\"));//取得指定时间的总毫秒数\r\n                //now是在动态页面中取得服务器的时间，如果没有定义使用客户端时间\r\n                if (obj.now == undefined) {\r\n                    obj.now = new Date().getDate()\r\n                }\r\n                var tms = (endDate -new Date(obj.now))+3000;//得到时间差\r\n                if (tms < 0) {\r\n                    //alert(\"时间过期了\");\r\n                    return;\r\n                }\r\n                $.oaoTime.timers.push({tms: tms, content: $(this),callback:obj.Fun});\r\n            });\r\n        $.oaoTime.start();\r\n        }\r\n\r\n//倒计时的插件\r\n    $.oaoTime = {\r\n//倒计时容器，所有需要倒计时的时间都需要注册到这个容器中，容器中放的是一个object，object描述了倒计时的结束时间，以及显示时间的jquery对象(例如div)\r\n        timers: [],\r\n//全局的一个倒计时状态，init表示初始化状态，start表示运行中状态，stop表示停止状态\r\n        status: 'init',\r\n//计算时间并定时刷新时间的方法，核心代码\r\n        takeCount: function () {\r\n//如果定时器没有启动不执行\r\n            if (this.status != 'start')return;\r\n            setTimeout(\"$.oaoTime.takeCount()\", 1000);\r\n            var timers = this.timers;\r\n            for (var i = 0, j = timers.length; i < j; i++) {\r\n//计数减一\r\n                timers[i].tms -= 1000;\r\n\r\n//console.info(timers[i].tms);\r\n//计算时分秒\r\n                var days = Math.floor(timers[i].tms / (1000 * 60 * 60 * 24));\r\n                var hours = Math.floor(timers[i].tms / (1000 * 60 * 60)) % 24;\r\n                var minutes = Math.floor(timers[i].tms / (1000 * 60)) % 60;\r\n                var seconds = Math.floor(timers[i].tms / 1000) % 60;\r\n\r\n                if (days < 0)days = 0;\r\n                if (hours < 0)hours = 0;\r\n                if (minutes < 0)minutes = 0;\r\n                if (seconds < 0) seconds = 0;\r\n                if(hours<10)\r\n                {\r\n                    hours=\"0\"+hours;\r\n                }\r\n                if(minutes<10)\r\n                {\r\n                    minutes=\"0\"+minutes;\r\n                }\r\n                if(seconds<10)\r\n                {\r\n                    seconds=\"0\"+seconds;\r\n                }\r\n               // var newTimeText = days + \"天\" + hours + \"小时\" + minutes + \"分\" + seconds + \"秒\";\r\n                var newTimeText = hours + \":\" + minutes + \":\" + seconds + \"\";\r\n                $(\".showtime_1\").html(minutes.toString().split('')[0]);\r\n                $(\".showtime_2\").html(minutes.toString().split('')[1]);\r\n                $(\".showtime_3\").html(seconds.toString().split('')[0]);\r\n                $(\".showtime_4\").html(seconds.toString().split('')[1]);\r\n\r\n                // if(timers[i])\r\n                // {\r\n                //     timers[i].content.html(newTimeText);\r\n                // }\r\n\r\n                if(hours==\"00\"&&minutes==\"00\"&&seconds==\"00\")\r\n                {\r\n                    console.log(\"--------------------------时间到、执行回调------------\"+seconds+\"------------\")\r\n                    if(typeof timers[i].callback == 'function'){\r\n                        timers[i].callback(timers[i].content)\r\n                        this.timers.splice(i,1);\r\n                    }\r\n                }\r\n            }\r\n           //\r\n        },\r\n        //启动倒计时\r\n        start: function () {\r\n            if (this.status == 'init') {\r\n                this.status = 'start';\r\n                this.takeCount();\r\n            }\r\n        },\r\n        //停止倒计时\r\n        stop: function () {\r\n            this.status = 'stop';\r\n        }\r\n    };\r\n\r\n});\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/chooseWord/assets/js/util/oao.timer.js"],"sourceRoot":""}